{
    "elements": [
        {
            "brief": "hashtable",
            "description": "Hashtable with chaining for collision resolution, memcpy-copy semantics (POD types) and 32-bit indicies instead of pointers. (NUMA-friendly)",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmHashTable",
            "notes": [
                "The key type needs to support == and % operators"
            ],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Specialized hash table with <span class=\"type\">uint16_t</span> as key...",
            "description": "Specialized hash table with <span class=\"type\">uint16_t</span> as keys",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmHashTable16",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Specialized hash table with <span class=\"type\">uint32_t</span> as key...",
            "description": "Specialized hash table with <span class=\"type\">uint32_t</span> as keys",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmHashTable32",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Specialized hash table with <span class=\"type\">uint64_t</span> as key...",
            "description": "Specialized hash table with <span class=\"type\">uint64_t</span> as keys",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmHashTable64",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Get an iterator for the key/value pairs",
            "description": "Get an iterator for the key/value pairs",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">dmHashTable</span><span class=\"o\">&lt;</span><span class=\"n\">dmhash_t</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"o\">&gt;::</span><span class=\"n\">Iterator</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ht</span><span class=\"p\">.</span><span class=\"n\">GetIterator</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">iter</span><span class=\"p\">.</span><span class=\"n\">Next</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;%s: %d</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dmHashReverseSafe64</span><span class=\"p\">(</span><span class=\"n\">iter</span><span class=\"p\">.</span><span class=\"n\">GetKey</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"p\">.</span><span class=\"n\">GetValue</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
            "members": [],
            "name": "GetIterator",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the iterator",
                    "name": "iterator",
                    "types": [
                        "dmHashTable<T>::Iterator"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Iterator to the key/value pairs of a hash table",
            "description": "Iterator to the key/value pairs of a hash table",
            "error": "",
            "examples": "",
            "members": [
                {
                    "doc": "",
                    "name": "GetKey()",
                    "type": ""
                },
                {
                    "doc": "",
                    "name": "GetValue()",
                    "type": ""
                }
            ],
            "name": "Iterator",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "STRUCT"
        }
    ],
    "info": {
        "brief": "Hash table",
        "description": "Hash table",
        "file": "dmsdk/dlib/hashtable.h",
        "group": "DEFOLD SDK",
        "name": "Hashtable",
        "namespace": "dmHashTable",
        "notes": [],
        "path": "engine/dlib/src/dmsdk/dlib/hashtable.h"
    }
}