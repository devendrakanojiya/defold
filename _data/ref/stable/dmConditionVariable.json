{
    "elements": [
        {
            "brief": "broadcast condition variable",
            "description": "Broadcast condition variable, effectively unblocks all of the waithing threads blocked\nby the condition variable.",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmConditionVariable::Broadcast",
            "notes": [],
            "parameters": [
                {
                    "doc": "ConditionVariable handle.",
                    "name": "condition",
                    "types": [
                        "dmConditionVariable::HConditionVariable"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "delete condition variable",
            "description": "Deletes a HConditionVariable.",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmConditionVariable::Delete",
            "notes": [],
            "parameters": [
                {
                    "doc": "ConditionVariable handle to delete.",
                    "name": "mutex",
                    "types": [
                        "dmConditionVariable::HConditionVariable"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "HConditionVariable type definition",
            "description": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">ConditionVariable</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">HConditionVariable</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmConditionVariable::HConditionVariable",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "TYPEDEF"
        },
        {
            "brief": "create condition variable",
            "description": "Create a new HConditionVariable",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmConditionVariable::New",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "A new ConditionVariable handle.",
                    "name": "condition_variable",
                    "types": [
                        "dmConditionVariable::HConditionVariable"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "signal condition variable",
            "description": "Signal condition variable, effectively unblocks at least one of the waithing threads blocked\nby the condition variable.",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmConditionVariable::Signal",
            "notes": [],
            "parameters": [
                {
                    "doc": "ConditionVariable handle.",
                    "name": "condition",
                    "types": [
                        "dmConditionVariable::HConditionVariable"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "wait for condition variable",
            "description": "Wait for condition variable. This is a blocking function, and should be called with\nthe mutex being locked.",
            "error": "",
            "examples": "",
            "members": [],
            "name": "dmConditionVariable::Wait",
            "notes": [],
            "parameters": [
                {
                    "doc": "ConditionVariable handle.",
                    "name": "condition",
                    "types": [
                        "dmConditionVariable::HConditionVariable"
                    ]
                },
                {
                    "doc": "Mutex handle.",
                    "name": "mutex",
                    "types": [
                        "dmMutex::HMutex"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        }
    ],
    "info": {
        "brief": "SDK Condition Variable API documentation",
        "description": "API for platform independent mutex synchronization primitive.",
        "file": "dmsdk/dlib/condition_variable.h",
        "group": "DEFOLD SDK",
        "name": "Condition Variable",
        "namespace": "dmConditionVariable",
        "notes": [],
        "path": "engine/dlib/src/dmsdk/dlib/condition_variable.h"
    }
}