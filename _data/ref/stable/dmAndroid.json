{
    "elements": [
        {
            "brief": "Detaches the jni environment",
            "description": "Detaches the jni environment",
            "error": "",
            "examples": "",
            "members": [],
            "name": "Detach",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "true if there was no java exceptions. False if there was an exception.",
                    "name": "ok",
                    "types": [
                        "bool"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Gets the app native activity",
            "description": "Gets the app native activity",
            "error": "",
            "examples": "",
            "members": [],
            "name": "GetActivity",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the app native activity",
                    "name": "activity",
                    "types": [
                        "ANativeActivity*"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Gets the JNI environment",
            "description": "Gets the JNI environment",
            "error": "",
            "examples": "",
            "members": [],
            "name": "GetEnv",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the attached environment",
                    "name": "env",
                    "types": [
                        "JNIENV*"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Is the environment attached and valid?",
            "description": "Is the environment attached and valid?",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">Result</span><span class=\"w\"> </span><span class=\"nf\">SomeFunc</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">ThreadAttacher</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">JNIEnv</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">.</span><span class=\"n\">GetEnv</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">env</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">RESULT_ATTACH_FAILED</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"n\">calls</span><span class=\"w\"> </span><span class=\"k\">using</span><span class=\"w\"> </span><span class=\"n\">jni</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">.</span><span class=\"n\">Detach</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">RESULT_OK</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">RESULT_JNI_CALLS_FAILED</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
            "members": [],
            "name": "IsAttached",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "true if the environment is valid",
                    "name": "isattached",
                    "types": [
                        "bool"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Load a class",
            "description": "Load a class",
            "error": "",
            "examples": "",
            "members": [],
            "name": "LoadClass",
            "notes": [],
            "parameters": [
                {
                    "doc": "",
                    "name": "env",
                    "types": [
                        "JNIEnv*"
                    ]
                },
                {
                    "doc": "",
                    "name": "class_name",
                    "types": [
                        "const char*"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the activity class loader",
                    "name": "class",
                    "types": [
                        "jclass"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Load a class",
            "description": "Load a class",
            "error": "",
            "examples": "",
            "members": [],
            "name": "LoadClass",
            "notes": [],
            "parameters": [
                {
                    "doc": "",
                    "name": "env",
                    "types": [
                        "JNIEnv*"
                    ]
                },
                {
                    "doc": "",
                    "name": "activity",
                    "types": [
                        "jobject"
                    ]
                },
                {
                    "doc": "",
                    "name": "class_name",
                    "types": [
                        "const char*"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [
                {
                    "doc": "the activity class loader",
                    "name": "class",
                    "types": [
                        "jclass"
                    ]
                }
            ],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "OnActivityCreate callback typedef",
            "description": "onCreate callback function type.\nUsed with RegisterOnActivityCreateListener() and UnregisterOnActivityCreateListener()",
            "error": "",
            "examples": "",
            "members": [],
            "name": "OnActivityCreate",
            "notes": [],
            "parameters": [
                {
                    "doc": "",
                    "name": "env",
                    "types": [
                        "JNIEnv*"
                    ]
                },
                {
                    "doc": "",
                    "name": "activity",
                    "types": [
                        "jobject"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "TYPEDEF"
        },
        {
            "brief": "OnActivityResult callback typedef",
            "description": "Activity result callback function type. Monitors events from the main activity.\nUsed with RegisterOnActivityResultListener() and UnregisterOnActivityResultListener()",
            "error": "",
            "examples": "",
            "members": [],
            "name": "OnActivityResult",
            "notes": [],
            "parameters": [
                {
                    "doc": "",
                    "name": "env",
                    "types": [
                        "JNIEnv*"
                    ]
                },
                {
                    "doc": "",
                    "name": "activity",
                    "types": [
                        "jobject"
                    ]
                },
                {
                    "doc": "",
                    "name": "request_code",
                    "types": [
                        "int32_t"
                    ]
                },
                {
                    "doc": "",
                    "name": "result_code",
                    "types": [
                        "int32_t"
                    ]
                },
                {
                    "doc": "",
                    "name": "result",
                    "types": [
                        "void*"
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "TYPEDEF"
        },
        {
            "brief": "register Android onCreate callback",
            "description": "Registers an onCreate callback. Multiple listeners are allowed.",
            "error": "",
            "examples": "",
            "members": [],
            "name": "RegisterOnActivityCreateListener",
            "notes": [
                "[icon:android] Only available on Android"
            ],
            "parameters": [
                {
                    "doc": "listener",
                    "name": "[type:dmAndroid::OnActivityCreate]",
                    "types": [
                        ""
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "register Android activity result callback",
            "description": "Registers an activity result callback. Multiple listeners are allowed.",
            "error": "",
            "examples": "",
            "members": [],
            "name": "RegisterOnActivityResultListener",
            "notes": [
                "[icon:android] Only available on Android"
            ],
            "parameters": [
                {
                    "doc": "listener",
                    "name": "[type:dmAndroid::OnActivityResult]",
                    "types": [
                        ""
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "Struct attaching the JNI environment. Detaches the",
            "description": "Struct attaching the JNI environment. Detaches the",
            "error": "",
            "examples": "",
            "members": [],
            "name": "ThreadAttacher",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "CLASS"
        },
        {
            "brief": "constructor",
            "description": "constructor",
            "error": "",
            "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">ThreadAttacher</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">SomeFunction</span><span class=\"p\">(</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">.</span><span class=\"n\">GetEnv</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// Automatically detaches</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">ThreadAttacher</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">JNIEnv</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kr\">thread</span><span class=\"p\">.</span><span class=\"n\">GetEnv</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">env</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
            "members": [],
            "name": "ThreadAttacher",
            "notes": [],
            "parameters": [],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "unregister Android onCreate callback",
            "description": "Unregisters an onCreate callback",
            "error": "",
            "examples": "",
            "members": [],
            "name": "UnregisterOnActivityCreateListener",
            "notes": [
                "[icon:android] Only available on Android"
            ],
            "parameters": [
                {
                    "doc": "listener",
                    "name": "[type:dmAndroid::OnActivityCreate]",
                    "types": [
                        ""
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        },
        {
            "brief": "unregister Android activity result callback",
            "description": "Unregisters an activity result callback",
            "error": "",
            "examples": "",
            "members": [],
            "name": "UnregisterOnActivityResultListener",
            "notes": [
                "[icon:android] Only available on Android"
            ],
            "parameters": [
                {
                    "doc": "listener",
                    "name": "[type:dmAndroid::OnActivityResult]",
                    "types": [
                        ""
                    ]
                }
            ],
            "replaces": "",
            "returnvalues": [],
            "tparams": [],
            "type": "FUNCTION"
        }
    ],
    "info": {
        "brief": "SDK Android API documentation",
        "description": "Android utility functions",
        "file": "dmsdk/dlib/android.h",
        "group": "DEFOLD SDK",
        "name": "Android",
        "namespace": "dmAndroid",
        "notes": [],
        "path": "engine/dlib/src/dmsdk/dlib/android.h"
    }
}